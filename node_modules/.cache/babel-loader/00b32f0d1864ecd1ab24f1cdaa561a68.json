{"ast":null,"code":"import { parse as t } from \"postcss\";\nimport e from \"postcss-selector-parser\";\nimport { access as s, readFile as r, constants as i } from \"fs\";\nimport { promisify as n } from \"util\";\nimport o from \"glob\";\nimport a from \"path\";\nconst c = {\n  css: [],\n  content: [],\n  defaultExtractor: t => t.match(/[A-Za-z0-9_-]+/g) || [],\n  extractors: [],\n  fontFace: !1,\n  keyframes: !1,\n  rejected: !1,\n  stdin: !1,\n  stdout: !1,\n  variables: !1,\n  whitelist: [],\n  whitelistPatterns: [],\n  whitelistPatternsChildren: []\n},\n      u = [\"*\", \"::-webkit-scrollbar\", \"::selection\", \":root\", \"::before\", \"::after\"];\n\nclass h {\n  constructor(t) {\n    this.nodes = [], this.isUsed = !1, this.value = t;\n  }\n\n}\n\nclass l {\n  constructor() {\n    this.nodes = new Map(), this.usedVariables = new Set();\n  }\n\n  addVariable(t) {\n    const {\n      prop: e\n    } = t;\n\n    if (!this.nodes.has(e)) {\n      const s = new h(t);\n      this.nodes.set(e, s);\n    }\n  }\n\n  addVariableUsage(t, e) {\n    const {\n      prop: s\n    } = t,\n          r = this.nodes.get(s);\n\n    for (const t of e) {\n      const e = t[1];\n\n      if (this.nodes.has(e)) {\n        const t = this.nodes.get(e);\n        null == r || r.nodes.push(t);\n      }\n    }\n  }\n\n  addVariableUsageInProperties(t) {\n    for (const e of t) {\n      const t = e[1];\n      this.usedVariables.add(t);\n    }\n  }\n\n  setAsUsed(t) {\n    const e = [this.nodes.get(t)];\n\n    for (; 0 !== e.length;) {\n      const t = e.pop();\n      t && !t.isUsed && (t.isUsed = !0, e.push(...t.nodes));\n    }\n  }\n\n  removeUnused() {\n    for (const t of this.usedVariables) this.setAsUsed(t);\n\n    for (const [, t] of this.nodes) t.isUsed || t.value.remove();\n  }\n\n}\n\nfunction d(t, e) {\n  e && e.forEach(t.add, t);\n}\n\nclass f {\n  constructor(t) {\n    this.undetermined = new Set(), this.attrNames = new Set(), this.attrValues = new Set(), this.classes = new Set(), this.ids = new Set(), this.tags = new Set(), this.merge(t);\n  }\n\n  merge(t) {\n    return Array.isArray(t) ? d(this.undetermined, t) : t instanceof f ? (d(this.undetermined, t.undetermined), d(this.attrNames, t.attrNames), d(this.attrValues, t.attrValues), d(this.classes, t.classes), d(this.ids, t.ids), d(this.tags, t.tags)) : (d(this.undetermined, t.undetermined), t.attributes && (d(this.attrNames, t.attributes.names), d(this.attrValues, t.attributes.values)), d(this.classes, t.classes), d(this.ids, t.ids), d(this.tags, t.tags)), this;\n  }\n\n  hasAttrName(t) {\n    return this.attrNames.has(t) || this.undetermined.has(t);\n  }\n\n  someAttrValue(t) {\n    for (const e of this.attrValues) if (t(e)) return !0;\n\n    for (const e of this.undetermined) if (t(e)) return !0;\n\n    return !1;\n  }\n\n  hasAttrPrefix(t) {\n    return this.someAttrValue(e => e.startsWith(t));\n  }\n\n  hasAttrSuffix(t) {\n    return this.someAttrValue(e => e.endsWith(t));\n  }\n\n  hasAttrSubstr(t) {\n    return this.someAttrValue(e => e.includes(t));\n  }\n\n  hasAttrValue(t) {\n    return this.attrValues.has(t) || this.undetermined.has(t);\n  }\n\n  hasClass(t) {\n    return this.classes.has(t) || this.undetermined.has(t);\n  }\n\n  hasId(t) {\n    return this.ids.has(t) || this.undetermined.has(t);\n  }\n\n  hasTag(t) {\n    return this.tags.has(t) || this.undetermined.has(t);\n  }\n\n}\n\nconst m = {\n  access: n(s),\n  readFile: n(r)\n};\n\nasync function p(t = \"purgecss.config.js\") {\n  let e;\n\n  try {\n    const s = a.join(process.cwd(), t);\n    e = await import(s);\n  } catch (t) {\n    throw new Error(`Error loading the config file ${t.message}`);\n  }\n\n  return { ...c,\n    ...e\n  };\n}\n\nasync function g(t, e) {\n  return new f(await e(t));\n}\n\nfunction v(t, e) {\n  switch (e) {\n    case \"next\":\n      return t.text.includes(\"purgecss ignore\");\n\n    case \"start\":\n      return t.text.includes(\"purgecss start ignore\");\n\n    case \"end\":\n      return t.text.includes(\"purgecss end ignore\");\n  }\n}\n\nfunction y(...t) {\n  const e = new f([]);\n  return t.forEach(e.merge, e), e;\n}\n\nfunction w(t) {\n  return t.replace(/(^[\"'])|([\"']$)/g, \"\");\n}\n\nfunction S(t, e) {\n  if (!e.hasAttrName(t.attribute)) return !1;\n  if (void 0 === t.value) return !0;\n\n  switch (t.operator) {\n    case \"$=\":\n      return e.hasAttrSuffix(t.value);\n\n    case \"~=\":\n    case \"*=\":\n      return e.hasAttrSubstr(t.value);\n\n    case \"=\":\n      return e.hasAttrValue(t.value);\n\n    case \"|=\":\n    case \"^=\":\n      return e.hasAttrPrefix(t.value);\n\n    default:\n      return !0;\n  }\n}\n\nfunction b(t, e) {\n  return e.hasId(t.value);\n}\n\nfunction F(t, e) {\n  return e.hasTag(t.value);\n}\n\nclass x {\n  constructor() {\n    this.ignore = !1, this.atRules = {\n      fontFace: [],\n      keyframes: []\n    }, this.usedAnimations = new Set(), this.usedFontFaces = new Set(), this.selectorsRemoved = new Set(), this.variablesStructure = new l(), this.options = c;\n  }\n\n  collectDeclarationsData(t) {\n    const {\n      prop: e,\n      value: s\n    } = t;\n\n    if (this.options.variables) {\n      const r = function (t, e) {\n        const s = [];\n        return t.replace(e, function () {\n          const e = arguments,\n                r = Array.prototype.slice.call(e, 0, -2);\n          return r.input = e[e.length - 1], r.index = e[e.length - 2], s.push(r), t;\n        }), s;\n      }(s, /var\\((.+?)[,)]/g);\n\n      e.startsWith(\"--\") ? (this.variablesStructure.addVariable(t), r.length > 0 && this.variablesStructure.addVariableUsage(t, r)) : r.length > 0 && this.variablesStructure.addVariableUsageInProperties(r);\n    }\n\n    if (!this.options.keyframes || \"animation\" !== e && \"animation-name\" !== e) {\n      if (this.options.fontFace) {\n        if (\"font-family\" === e) for (const t of s.split(\",\")) {\n          const e = w(t.trim());\n          this.usedFontFaces.add(e);\n        }\n      } else ;\n    } else for (const t of s.split(/[\\s,]+/)) this.usedAnimations.add(t);\n  }\n\n  getFileExtractor(t, e) {\n    const s = e.find(e => e.extensions.find(e => t.endsWith(e)));\n    return void 0 === s ? this.options.defaultExtractor : s.extractor;\n  }\n\n  async extractSelectorsFromFiles(t, e) {\n    const s = new f([]);\n\n    for (const r of t) {\n      let t = [];\n\n      try {\n        await m.access(r, i.F_OK), t.push(r);\n      } catch (e) {\n        t = o.sync(r, {\n          nodir: !0\n        });\n      }\n\n      for (const r of t) {\n        const t = await m.readFile(r, \"utf-8\"),\n              i = this.getFileExtractor(r, e),\n              n = await g(t, i);\n        s.merge(n);\n      }\n    }\n\n    return s;\n  }\n\n  async extractSelectorsFromString(t, e) {\n    const s = new f([]);\n\n    for (const {\n      raw: r,\n      extension: i\n    } of t) {\n      const t = this.getFileExtractor(`.${i}`, e),\n            n = await g(r, t);\n      s.merge(n);\n    }\n\n    return s;\n  }\n\n  evaluateAtRule(t) {\n    if (this.options.keyframes && t.name.endsWith(\"keyframes\")) this.atRules.keyframes.push(t);else if (this.options.fontFace && \"font-face\" === t.name && t.nodes) for (const e of t.nodes) \"decl\" === e.type && \"font-family\" === e.prop && this.atRules.fontFace.push({\n      name: w(e.value),\n      node: t\n    });\n  }\n\n  async evaluateRule(t, s) {\n    if (this.ignore) return;\n    const r = t.prev();\n    if (r && \"comment\" === r.type && v(r, \"next\")) return void r.remove();\n    if (t.parent && \"atrule\" === t.parent.type && \"keyframes\" === t.parent.name) return;\n    if (\"rule\" !== t.type) return;\n    if (function (t) {\n      let e = !1;\n      return t.walkComments(t => {\n        t && \"comment\" === t.type && t.text.includes(\"purgecss ignore current\") && (e = !0, t.remove());\n      }), e;\n    }(t)) return;\n    let i = !0;\n    if (t.selector = e(t => {\n      t.walk(t => {\n        \"selector\" === t.type && (i = this.shouldKeepSelector(t, s), i || (this.options.rejected && this.selectorsRemoved.add(t.toString()), t.remove()));\n      });\n    }).processSync(t.selector), i && void 0 !== t.nodes) for (const e of t.nodes) \"decl\" === e.type && this.collectDeclarationsData(e);\n    const n = t.parent;\n    t.selector || t.remove(), function (t) {\n      return !!(\"rule\" === t.type && !t.selector || t.nodes && !t.nodes.length || \"atrule\" === t.type && (!t.nodes && !t.params || !t.params && t.nodes && !t.nodes.length));\n    }(n) && n.remove();\n  }\n\n  async getPurgedCSS(e, s) {\n    const r = [],\n          i = [];\n\n    for (const t of e) \"string\" == typeof t ? i.push(...o.sync(t, {\n      nodir: !0\n    })) : i.push(t);\n\n    for (const e of i) {\n      const i = \"string\" == typeof e ? this.options.stdin ? e : await m.readFile(e, \"utf-8\") : e.raw,\n            n = t(i);\n      this.walkThroughCSS(n, s), this.options.fontFace && this.removeUnusedFontFaces(), this.options.keyframes && this.removeUnusedKeyframes(), this.options.variables && this.removeUnusedCSSVariables();\n      const o = {\n        css: n.toString(),\n        file: \"string\" == typeof e ? e : void 0\n      };\n      \"string\" == typeof e && (o.file = e), this.options.rejected && (o.rejected = Array.from(this.selectorsRemoved), this.selectorsRemoved.clear()), r.push(o);\n    }\n\n    return r;\n  }\n\n  isSelectorWhitelisted(t) {\n    return u.includes(t) || this.options.whitelist && this.options.whitelist.some(e => e === t) || this.options.whitelistPatterns && this.options.whitelistPatterns.some(e => e.test(t));\n  }\n\n  isSelectorWhitelistedChildren(t) {\n    return this.options.whitelistPatternsChildren && this.options.whitelistPatternsChildren.some(e => e.test(t));\n  }\n\n  async purge(t) {\n    this.options = \"object\" != typeof t ? await p(t) : { ...c,\n      ...t\n    };\n    const {\n      content: e,\n      css: s,\n      extractors: r\n    } = this.options,\n          i = e.filter(t => \"string\" == typeof t),\n          n = e.filter(t => \"object\" == typeof t),\n          o = await this.extractSelectorsFromFiles(i, r),\n          a = await this.extractSelectorsFromString(n, r);\n    return this.getPurgedCSS(s, y(o, a));\n  }\n\n  removeUnusedCSSVariables() {\n    this.variablesStructure.removeUnused();\n  }\n\n  removeUnusedFontFaces() {\n    for (const {\n      name: t,\n      node: e\n    } of this.atRules.fontFace) this.usedFontFaces.has(t) || e.remove();\n  }\n\n  removeUnusedKeyframes() {\n    for (const t of this.atRules.keyframes) this.usedAnimations.has(t.params) || t.remove();\n  }\n\n  shouldKeepSelector(t, e) {\n    if (function (t) {\n      return t.parent && \"pseudo\" === t.parent.type && t.parent.value.startsWith(\":\") || !1;\n    }(t)) return !0;\n    let s = !1;\n\n    for (const i of t.nodes) {\n      const t = \"attribute\" === i.type && i.attribute || i.value;\n      if (t && this.isSelectorWhitelistedChildren(t)) return !0;\n      if (t && (u.includes(t) || this.isSelectorWhitelisted(t))) s = !0;else {\n        switch (i.type) {\n          case \"attribute\":\n            s = !![\"value\", \"checked\", \"selected\", \"open\"].includes(i.attribute) || S(i, e);\n            break;\n\n          case \"class\":\n            r = i, s = e.hasClass(r.value);\n            break;\n\n          case \"id\":\n            s = b(i, e);\n            break;\n\n          case \"tag\":\n            s = F(i, e);\n        }\n\n        if (!s) return !1;\n      }\n    }\n\n    var r;\n    return s;\n  }\n\n  walkThroughCSS(t, e) {\n    t.walk(t => \"rule\" === t.type ? this.evaluateRule(t, e) : \"atrule\" === t.type ? this.evaluateAtRule(t) : void (\"comment\" === t.type && (v(t, \"start\") ? (this.ignore = !0, t.remove()) : v(t, \"end\") && (this.ignore = !1, t.remove()))));\n  }\n\n}\n\nexport default x;\nexport { x as PurgeCSS, c as defaultOptions, y as mergeExtractorSelectors, p as setOptions };","map":{"version":3,"sources":["/home/daniel/work/projet/portfolio/node_modules/purgecss/lib/purgecss.esm.js"],"names":["parse","t","e","access","s","readFile","r","constants","i","promisify","n","o","a","c","css","content","defaultExtractor","match","extractors","fontFace","keyframes","rejected","stdin","stdout","variables","whitelist","whitelistPatterns","whitelistPatternsChildren","u","h","constructor","nodes","isUsed","value","l","Map","usedVariables","Set","addVariable","prop","has","set","addVariableUsage","get","push","addVariableUsageInProperties","add","setAsUsed","length","pop","removeUnused","remove","d","forEach","f","undetermined","attrNames","attrValues","classes","ids","tags","merge","Array","isArray","attributes","names","values","hasAttrName","someAttrValue","hasAttrPrefix","startsWith","hasAttrSuffix","endsWith","hasAttrSubstr","includes","hasAttrValue","hasClass","hasId","hasTag","m","p","join","process","cwd","Error","message","g","v","text","y","w","replace","S","attribute","operator","b","F","x","ignore","atRules","usedAnimations","usedFontFaces","selectorsRemoved","variablesStructure","options","collectDeclarationsData","arguments","prototype","slice","call","input","index","split","trim","getFileExtractor","find","extensions","extractor","extractSelectorsFromFiles","F_OK","sync","nodir","extractSelectorsFromString","raw","extension","evaluateAtRule","name","type","node","evaluateRule","prev","parent","walkComments","selector","walk","shouldKeepSelector","toString","processSync","params","getPurgedCSS","walkThroughCSS","removeUnusedFontFaces","removeUnusedKeyframes","removeUnusedCSSVariables","file","from","clear","isSelectorWhitelisted","some","test","isSelectorWhitelistedChildren","purge","filter","PurgeCSS","defaultOptions","mergeExtractorSelectors","setOptions"],"mappings":"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","sourcesContent":["import{parse as t}from\"postcss\";import e from\"postcss-selector-parser\";import{access as s,readFile as r,constants as i}from\"fs\";import{promisify as n}from\"util\";import o from\"glob\";import a from\"path\";const c={css:[],content:[],defaultExtractor:t=>t.match(/[A-Za-z0-9_-]+/g)||[],extractors:[],fontFace:!1,keyframes:!1,rejected:!1,stdin:!1,stdout:!1,variables:!1,whitelist:[],whitelistPatterns:[],whitelistPatternsChildren:[]},u=[\"*\",\"::-webkit-scrollbar\",\"::selection\",\":root\",\"::before\",\"::after\"];class h{constructor(t){this.nodes=[],this.isUsed=!1,this.value=t}}class l{constructor(){this.nodes=new Map,this.usedVariables=new Set}addVariable(t){const{prop:e}=t;if(!this.nodes.has(e)){const s=new h(t);this.nodes.set(e,s)}}addVariableUsage(t,e){const{prop:s}=t,r=this.nodes.get(s);for(const t of e){const e=t[1];if(this.nodes.has(e)){const t=this.nodes.get(e);null==r||r.nodes.push(t)}}}addVariableUsageInProperties(t){for(const e of t){const t=e[1];this.usedVariables.add(t)}}setAsUsed(t){const e=[this.nodes.get(t)];for(;0!==e.length;){const t=e.pop();t&&!t.isUsed&&(t.isUsed=!0,e.push(...t.nodes))}}removeUnused(){for(const t of this.usedVariables)this.setAsUsed(t);for(const[,t]of this.nodes)t.isUsed||t.value.remove()}}function d(t,e){e&&e.forEach(t.add,t)}class f{constructor(t){this.undetermined=new Set,this.attrNames=new Set,this.attrValues=new Set,this.classes=new Set,this.ids=new Set,this.tags=new Set,this.merge(t)}merge(t){return Array.isArray(t)?d(this.undetermined,t):t instanceof f?(d(this.undetermined,t.undetermined),d(this.attrNames,t.attrNames),d(this.attrValues,t.attrValues),d(this.classes,t.classes),d(this.ids,t.ids),d(this.tags,t.tags)):(d(this.undetermined,t.undetermined),t.attributes&&(d(this.attrNames,t.attributes.names),d(this.attrValues,t.attributes.values)),d(this.classes,t.classes),d(this.ids,t.ids),d(this.tags,t.tags)),this}hasAttrName(t){return this.attrNames.has(t)||this.undetermined.has(t)}someAttrValue(t){for(const e of this.attrValues)if(t(e))return!0;for(const e of this.undetermined)if(t(e))return!0;return!1}hasAttrPrefix(t){return this.someAttrValue(e=>e.startsWith(t))}hasAttrSuffix(t){return this.someAttrValue(e=>e.endsWith(t))}hasAttrSubstr(t){return this.someAttrValue(e=>e.includes(t))}hasAttrValue(t){return this.attrValues.has(t)||this.undetermined.has(t)}hasClass(t){return this.classes.has(t)||this.undetermined.has(t)}hasId(t){return this.ids.has(t)||this.undetermined.has(t)}hasTag(t){return this.tags.has(t)||this.undetermined.has(t)}}const m={access:n(s),readFile:n(r)};async function p(t=\"purgecss.config.js\"){let e;try{const s=a.join(process.cwd(),t);e=await import(s)}catch(t){throw new Error(`Error loading the config file ${t.message}`)}return{...c,...e}}async function g(t,e){return new f(await e(t))}function v(t,e){switch(e){case\"next\":return t.text.includes(\"purgecss ignore\");case\"start\":return t.text.includes(\"purgecss start ignore\");case\"end\":return t.text.includes(\"purgecss end ignore\")}}function y(...t){const e=new f([]);return t.forEach(e.merge,e),e}function w(t){return t.replace(/(^[\"'])|([\"']$)/g,\"\")}function S(t,e){if(!e.hasAttrName(t.attribute))return!1;if(void 0===t.value)return!0;switch(t.operator){case\"$=\":return e.hasAttrSuffix(t.value);case\"~=\":case\"*=\":return e.hasAttrSubstr(t.value);case\"=\":return e.hasAttrValue(t.value);case\"|=\":case\"^=\":return e.hasAttrPrefix(t.value);default:return!0}}function b(t,e){return e.hasId(t.value)}function F(t,e){return e.hasTag(t.value)}class x{constructor(){this.ignore=!1,this.atRules={fontFace:[],keyframes:[]},this.usedAnimations=new Set,this.usedFontFaces=new Set,this.selectorsRemoved=new Set,this.variablesStructure=new l,this.options=c}collectDeclarationsData(t){const{prop:e,value:s}=t;if(this.options.variables){const r=function(t,e){const s=[];return t.replace(e,(function(){const e=arguments,r=Array.prototype.slice.call(e,0,-2);return r.input=e[e.length-1],r.index=e[e.length-2],s.push(r),t})),s}(s,/var\\((.+?)[,)]/g);e.startsWith(\"--\")?(this.variablesStructure.addVariable(t),r.length>0&&this.variablesStructure.addVariableUsage(t,r)):r.length>0&&this.variablesStructure.addVariableUsageInProperties(r)}if(!this.options.keyframes||\"animation\"!==e&&\"animation-name\"!==e)if(this.options.fontFace){if(\"font-family\"===e)for(const t of s.split(\",\")){const e=w(t.trim());this.usedFontFaces.add(e)}}else;else for(const t of s.split(/[\\s,]+/))this.usedAnimations.add(t)}getFileExtractor(t,e){const s=e.find(e=>e.extensions.find(e=>t.endsWith(e)));return void 0===s?this.options.defaultExtractor:s.extractor}async extractSelectorsFromFiles(t,e){const s=new f([]);for(const r of t){let t=[];try{await m.access(r,i.F_OK),t.push(r)}catch(e){t=o.sync(r,{nodir:!0})}for(const r of t){const t=await m.readFile(r,\"utf-8\"),i=this.getFileExtractor(r,e),n=await g(t,i);s.merge(n)}}return s}async extractSelectorsFromString(t,e){const s=new f([]);for(const{raw:r,extension:i}of t){const t=this.getFileExtractor(`.${i}`,e),n=await g(r,t);s.merge(n)}return s}evaluateAtRule(t){if(this.options.keyframes&&t.name.endsWith(\"keyframes\"))this.atRules.keyframes.push(t);else if(this.options.fontFace&&\"font-face\"===t.name&&t.nodes)for(const e of t.nodes)\"decl\"===e.type&&\"font-family\"===e.prop&&this.atRules.fontFace.push({name:w(e.value),node:t})}async evaluateRule(t,s){if(this.ignore)return;const r=t.prev();if(r&&\"comment\"===r.type&&v(r,\"next\"))return void r.remove();if(t.parent&&\"atrule\"===t.parent.type&&\"keyframes\"===t.parent.name)return;if(\"rule\"!==t.type)return;if(function(t){let e=!1;return t.walkComments(t=>{t&&\"comment\"===t.type&&t.text.includes(\"purgecss ignore current\")&&(e=!0,t.remove())}),e}(t))return;let i=!0;if(t.selector=e(t=>{t.walk(t=>{\"selector\"===t.type&&(i=this.shouldKeepSelector(t,s),i||(this.options.rejected&&this.selectorsRemoved.add(t.toString()),t.remove()))})}).processSync(t.selector),i&&void 0!==t.nodes)for(const e of t.nodes)\"decl\"===e.type&&this.collectDeclarationsData(e);const n=t.parent;t.selector||t.remove(),function(t){return!!(\"rule\"===t.type&&!t.selector||t.nodes&&!t.nodes.length||\"atrule\"===t.type&&(!t.nodes&&!t.params||!t.params&&t.nodes&&!t.nodes.length))}(n)&&n.remove()}async getPurgedCSS(e,s){const r=[],i=[];for(const t of e)\"string\"==typeof t?i.push(...o.sync(t,{nodir:!0})):i.push(t);for(const e of i){const i=\"string\"==typeof e?this.options.stdin?e:await m.readFile(e,\"utf-8\"):e.raw,n=t(i);this.walkThroughCSS(n,s),this.options.fontFace&&this.removeUnusedFontFaces(),this.options.keyframes&&this.removeUnusedKeyframes(),this.options.variables&&this.removeUnusedCSSVariables();const o={css:n.toString(),file:\"string\"==typeof e?e:void 0};\"string\"==typeof e&&(o.file=e),this.options.rejected&&(o.rejected=Array.from(this.selectorsRemoved),this.selectorsRemoved.clear()),r.push(o)}return r}isSelectorWhitelisted(t){return u.includes(t)||this.options.whitelist&&this.options.whitelist.some(e=>e===t)||this.options.whitelistPatterns&&this.options.whitelistPatterns.some(e=>e.test(t))}isSelectorWhitelistedChildren(t){return this.options.whitelistPatternsChildren&&this.options.whitelistPatternsChildren.some(e=>e.test(t))}async purge(t){this.options=\"object\"!=typeof t?await p(t):{...c,...t};const{content:e,css:s,extractors:r}=this.options,i=e.filter(t=>\"string\"==typeof t),n=e.filter(t=>\"object\"==typeof t),o=await this.extractSelectorsFromFiles(i,r),a=await this.extractSelectorsFromString(n,r);return this.getPurgedCSS(s,y(o,a))}removeUnusedCSSVariables(){this.variablesStructure.removeUnused()}removeUnusedFontFaces(){for(const{name:t,node:e}of this.atRules.fontFace)this.usedFontFaces.has(t)||e.remove()}removeUnusedKeyframes(){for(const t of this.atRules.keyframes)this.usedAnimations.has(t.params)||t.remove()}shouldKeepSelector(t,e){if(function(t){return t.parent&&\"pseudo\"===t.parent.type&&t.parent.value.startsWith(\":\")||!1}(t))return!0;let s=!1;for(const i of t.nodes){const t=\"attribute\"===i.type&&i.attribute||i.value;if(t&&this.isSelectorWhitelistedChildren(t))return!0;if(t&&(u.includes(t)||this.isSelectorWhitelisted(t)))s=!0;else{switch(i.type){case\"attribute\":s=!![\"value\",\"checked\",\"selected\",\"open\"].includes(i.attribute)||S(i,e);break;case\"class\":r=i,s=e.hasClass(r.value);break;case\"id\":s=b(i,e);break;case\"tag\":s=F(i,e)}if(!s)return!1}}var r;return s}walkThroughCSS(t,e){t.walk(t=>\"rule\"===t.type?this.evaluateRule(t,e):\"atrule\"===t.type?this.evaluateAtRule(t):void(\"comment\"===t.type&&(v(t,\"start\")?(this.ignore=!0,t.remove()):v(t,\"end\")&&(this.ignore=!1,t.remove()))))}}export default x;export{x as PurgeCSS,c as defaultOptions,y as mergeExtractorSelectors,p as setOptions};\n"]},"metadata":{},"sourceType":"module"}