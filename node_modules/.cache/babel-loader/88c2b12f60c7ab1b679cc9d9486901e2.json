{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = generateVariantFunction;\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _postcss = _interopRequireDefault(require(\"postcss\"));\n\nvar _postcssSelectorParser = _interopRequireDefault(require(\"postcss-selector-parser\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction generateVariantFunction(generator) {\n  return (container, config) => {\n    const cloned = _postcss.default.root({\n      nodes: container.clone().nodes\n    });\n\n    container.before(_lodash.default.defaultTo(generator({\n      container: cloned,\n      separator: config.separator,\n      modifySelectors: modifierFunction => {\n        cloned.each(rule => {\n          if (rule.type !== 'rule') {\n            return;\n          }\n\n          rule.selectors = rule.selectors.map(selector => {\n            const className = (0, _postcssSelectorParser.default)(selectors => {\n              return selectors.first.filter(({\n                type\n              }) => type === 'class').pop().value;\n            }).transformSync(selector);\n            return modifierFunction({\n              className,\n              selector\n            });\n          });\n        });\n        return cloned;\n      }\n    }), cloned).nodes);\n  };\n}","map":{"version":3,"sources":["/home/daniel/work/projet/portfolio/node_modules/tailwindcss/lib/util/generateVariantFunction.js"],"names":["Object","defineProperty","exports","value","default","generateVariantFunction","_lodash","_interopRequireDefault","require","_postcss","_postcssSelectorParser","obj","__esModule","generator","container","config","cloned","root","nodes","clone","before","defaultTo","separator","modifySelectors","modifierFunction","each","rule","type","selectors","map","selector","className","first","filter","pop","transformSync"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,uBAAlB;;AAEA,IAAIC,OAAO,GAAGC,sBAAsB,CAACC,OAAO,CAAC,QAAD,CAAR,CAApC;;AAEA,IAAIC,QAAQ,GAAGF,sBAAsB,CAACC,OAAO,CAAC,SAAD,CAAR,CAArC;;AAEA,IAAIE,sBAAsB,GAAGH,sBAAsB,CAACC,OAAO,CAAC,yBAAD,CAAR,CAAnD;;AAEA,SAASD,sBAAT,CAAgCI,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEP,IAAAA,OAAO,EAAEO;AAAX,GAArC;AAAwD;;AAE/F,SAASN,uBAAT,CAAiCQ,SAAjC,EAA4C;AAC1C,SAAO,CAACC,SAAD,EAAYC,MAAZ,KAAuB;AAC5B,UAAMC,MAAM,GAAGP,QAAQ,CAACL,OAAT,CAAiBa,IAAjB,CAAsB;AACnCC,MAAAA,KAAK,EAAEJ,SAAS,CAACK,KAAV,GAAkBD;AADU,KAAtB,CAAf;;AAIAJ,IAAAA,SAAS,CAACM,MAAV,CAAiBd,OAAO,CAACF,OAAR,CAAgBiB,SAAhB,CAA0BR,SAAS,CAAC;AACnDC,MAAAA,SAAS,EAAEE,MADwC;AAEnDM,MAAAA,SAAS,EAAEP,MAAM,CAACO,SAFiC;AAGnDC,MAAAA,eAAe,EAAEC,gBAAgB,IAAI;AACnCR,QAAAA,MAAM,CAACS,IAAP,CAAYC,IAAI,IAAI;AAClB,cAAIA,IAAI,CAACC,IAAL,KAAc,MAAlB,EAA0B;AACxB;AACD;;AAEDD,UAAAA,IAAI,CAACE,SAAL,GAAiBF,IAAI,CAACE,SAAL,CAAeC,GAAf,CAAmBC,QAAQ,IAAI;AAC9C,kBAAMC,SAAS,GAAG,CAAC,GAAGrB,sBAAsB,CAACN,OAA3B,EAAoCwB,SAAS,IAAI;AACjE,qBAAOA,SAAS,CAACI,KAAV,CAAgBC,MAAhB,CAAuB,CAAC;AAC7BN,gBAAAA;AAD6B,eAAD,KAExBA,IAAI,KAAK,OAFR,EAEiBO,GAFjB,GAEuB/B,KAF9B;AAGD,aAJiB,EAIfgC,aAJe,CAIDL,QAJC,CAAlB;AAKA,mBAAON,gBAAgB,CAAC;AACtBO,cAAAA,SADsB;AAEtBD,cAAAA;AAFsB,aAAD,CAAvB;AAID,WAVgB,CAAjB;AAWD,SAhBD;AAiBA,eAAOd,MAAP;AACD;AAtBkD,KAAD,CAAnC,EAuBbA,MAvBa,EAuBLE,KAvBZ;AAwBD,GA7BD;AA8BD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = generateVariantFunction;\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _postcss = _interopRequireDefault(require(\"postcss\"));\n\nvar _postcssSelectorParser = _interopRequireDefault(require(\"postcss-selector-parser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction generateVariantFunction(generator) {\n  return (container, config) => {\n    const cloned = _postcss.default.root({\n      nodes: container.clone().nodes\n    });\n\n    container.before(_lodash.default.defaultTo(generator({\n      container: cloned,\n      separator: config.separator,\n      modifySelectors: modifierFunction => {\n        cloned.each(rule => {\n          if (rule.type !== 'rule') {\n            return;\n          }\n\n          rule.selectors = rule.selectors.map(selector => {\n            const className = (0, _postcssSelectorParser.default)(selectors => {\n              return selectors.first.filter(({\n                type\n              }) => type === 'class').pop().value;\n            }).transformSync(selector);\n            return modifierFunction({\n              className,\n              selector\n            });\n          });\n        });\n        return cloned;\n      }\n    }), cloned).nodes);\n  };\n}"]},"metadata":{},"sourceType":"script"}