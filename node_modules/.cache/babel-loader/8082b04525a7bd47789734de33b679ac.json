{"ast":null,"code":"import e from \"postcss\";\nimport t, { mergeExtractorSelectors as o, defaultOptions as s } from \"purgecss\";\nconst r = e.plugin(\"postcss-plugin-purgecss\", function (e) {\n  return async function (r, n) {\n    const c = new t(),\n          i = { ...s,\n      ...e\n    };\n    e && \"function\" == typeof e.contentFunction && (i.content = e.contentFunction(r.source && r.source.input.file || \"\")), c.options = i;\n    const {\n      content: p,\n      extractors: u\n    } = i,\n          a = p.filter(e => \"string\" == typeof e),\n          l = p.filter(e => \"object\" == typeof e),\n          m = await c.extractSelectorsFromFiles(a, u),\n          f = await c.extractSelectorsFromString(l, u),\n          g = o(m, f);\n    c.walkThroughCSS(r, g), c.options.fontFace && c.removeUnusedFontFaces(), c.options.keyframes && c.removeUnusedKeyframes(), c.options.variables && c.removeUnusedCSSVariables(), c.options.rejected && c.selectorsRemoved.size > 0 && (n.messages.push({\n      type: \"purgecss\",\n      plugin: \"postcss-purgecss\",\n      text: `purging ${c.selectorsRemoved.size} selectors:\\n        ${Array.from(c.selectorsRemoved).map(e => e.trim()).join(\"\\n  \")}`\n    }), c.selectorsRemoved.clear());\n  };\n});\nexport default r;","map":{"version":3,"sources":["/home/daniel/work/projet/portfolio/node_modules/@fullhuman/postcss-purgecss/lib/postcss-purgecss.esm.js"],"names":["e","t","mergeExtractorSelectors","o","defaultOptions","s","r","plugin","n","c","i","contentFunction","content","source","input","file","options","p","extractors","u","a","filter","l","m","extractSelectorsFromFiles","f","extractSelectorsFromString","g","walkThroughCSS","fontFace","removeUnusedFontFaces","keyframes","removeUnusedKeyframes","variables","removeUnusedCSSVariables","rejected","selectorsRemoved","size","messages","push","type","text","Array","from","map","trim","join","clear"],"mappings":"AAAA,OAAOA,CAAP,MAAa,SAAb;AAAuB,OAAOC,CAAP,IAAUC,uBAAuB,IAAIC,CAArC,EAAuCC,cAAc,IAAIC,CAAzD,QAA+D,UAA/D;AAA0E,MAAMC,CAAC,GAACN,CAAC,CAACO,MAAF,CAAS,yBAAT,EAAoC,UAASP,CAAT,EAAW;AAAC,SAAO,gBAAeM,CAAf,EAAiBE,CAAjB,EAAmB;AAAC,UAAMC,CAAC,GAAC,IAAIR,CAAJ,EAAR;AAAA,UAAcS,CAAC,GAAC,EAAC,GAAGL,CAAJ;AAAM,SAAGL;AAAT,KAAhB;AAA4BA,IAAAA,CAAC,IAAE,cAAY,OAAOA,CAAC,CAACW,eAAxB,KAA0CD,CAAC,CAACE,OAAF,GAAUZ,CAAC,CAACW,eAAF,CAAkBL,CAAC,CAACO,MAAF,IAAUP,CAAC,CAACO,MAAF,CAASC,KAAT,CAAeC,IAAzB,IAA+B,EAAjD,CAApD,GAA0GN,CAAC,CAACO,OAAF,GAAUN,CAApH;AAAsH,UAAK;AAACE,MAAAA,OAAO,EAACK,CAAT;AAAWC,MAAAA,UAAU,EAACC;AAAtB,QAAyBT,CAA9B;AAAA,UAAgCU,CAAC,GAACH,CAAC,CAACI,MAAF,CAASrB,CAAC,IAAE,YAAU,OAAOA,CAA7B,CAAlC;AAAA,UAAkEsB,CAAC,GAACL,CAAC,CAACI,MAAF,CAASrB,CAAC,IAAE,YAAU,OAAOA,CAA7B,CAApE;AAAA,UAAoGuB,CAAC,GAAC,MAAMd,CAAC,CAACe,yBAAF,CAA4BJ,CAA5B,EAA8BD,CAA9B,CAA5G;AAAA,UAA6IM,CAAC,GAAC,MAAMhB,CAAC,CAACiB,0BAAF,CAA6BJ,CAA7B,EAA+BH,CAA/B,CAArJ;AAAA,UAAuLQ,CAAC,GAACxB,CAAC,CAACoB,CAAD,EAAGE,CAAH,CAA1L;AAAgMhB,IAAAA,CAAC,CAACmB,cAAF,CAAiBtB,CAAjB,EAAmBqB,CAAnB,GAAsBlB,CAAC,CAACO,OAAF,CAAUa,QAAV,IAAoBpB,CAAC,CAACqB,qBAAF,EAA1C,EAAoErB,CAAC,CAACO,OAAF,CAAUe,SAAV,IAAqBtB,CAAC,CAACuB,qBAAF,EAAzF,EAAmHvB,CAAC,CAACO,OAAF,CAAUiB,SAAV,IAAqBxB,CAAC,CAACyB,wBAAF,EAAxI,EAAqKzB,CAAC,CAACO,OAAF,CAAUmB,QAAV,IAAoB1B,CAAC,CAAC2B,gBAAF,CAAmBC,IAAnB,GAAwB,CAA5C,KAAgD7B,CAAC,CAAC8B,QAAF,CAAWC,IAAX,CAAgB;AAACC,MAAAA,IAAI,EAAC,UAAN;AAAiBjC,MAAAA,MAAM,EAAC,kBAAxB;AAA2CkC,MAAAA,IAAI,EAAE,WAAUhC,CAAC,CAAC2B,gBAAF,CAAmBC,IAAK,wBAAuBK,KAAK,CAACC,IAAN,CAAWlC,CAAC,CAAC2B,gBAAb,EAA+BQ,GAA/B,CAAmC5C,CAAC,IAAEA,CAAC,CAAC6C,IAAF,EAAtC,EAAgDC,IAAhD,CAAqD,MAArD,CAA6D;AAAvK,KAAhB,GAA2LrC,CAAC,CAAC2B,gBAAF,CAAmBW,KAAnB,EAA3O,CAArK;AAA4a,GAAzxB;AAA0xB,CAA10B,CAAR;AAAq1B,eAAezC,CAAf","sourcesContent":["import e from\"postcss\";import t,{mergeExtractorSelectors as o,defaultOptions as s}from\"purgecss\";const r=e.plugin(\"postcss-plugin-purgecss\",(function(e){return async function(r,n){const c=new t,i={...s,...e};e&&\"function\"==typeof e.contentFunction&&(i.content=e.contentFunction(r.source&&r.source.input.file||\"\")),c.options=i;const{content:p,extractors:u}=i,a=p.filter(e=>\"string\"==typeof e),l=p.filter(e=>\"object\"==typeof e),m=await c.extractSelectorsFromFiles(a,u),f=await c.extractSelectorsFromString(l,u),g=o(m,f);c.walkThroughCSS(r,g),c.options.fontFace&&c.removeUnusedFontFaces(),c.options.keyframes&&c.removeUnusedKeyframes(),c.options.variables&&c.removeUnusedCSSVariables(),c.options.rejected&&c.selectorsRemoved.size>0&&(n.messages.push({type:\"purgecss\",plugin:\"postcss-purgecss\",text:`purging ${c.selectorsRemoved.size} selectors:\\n        ${Array.from(c.selectorsRemoved).map(e=>e.trim()).join(\"\\n  \")}`}),c.selectorsRemoved.clear())}}));export default r;\n"]},"metadata":{},"sourceType":"module"}