{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = prefixNegativeModifiers;\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction prefixNegativeModifiers(base, modifier) {\n  if (modifier === '-') {\n    return `-${base}`;\n  } else if (_lodash.default.startsWith(modifier, '-')) {\n    return `-${base}-${modifier.slice(1)}`;\n  } else {\n    return `${base}-${modifier}`;\n  }\n}","map":{"version":3,"sources":["/home/daniel/work/projet/portfolio/node_modules/tailwindcss/lib/util/prefixNegativeModifiers.js"],"names":["Object","defineProperty","exports","value","default","prefixNegativeModifiers","_lodash","_interopRequireDefault","require","obj","__esModule","base","modifier","startsWith","slice"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,uBAAlB;;AAEA,IAAIC,OAAO,GAAGC,sBAAsB,CAACC,OAAO,CAAC,QAAD,CAAR,CAApC;;AAEA,SAASD,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEL,IAAAA,OAAO,EAAEK;AAAX,GAArC;AAAwD;;AAE/F,SAASJ,uBAAT,CAAiCM,IAAjC,EAAuCC,QAAvC,EAAiD;AAC/C,MAAIA,QAAQ,KAAK,GAAjB,EAAsB;AACpB,WAAQ,IAAGD,IAAK,EAAhB;AACD,GAFD,MAEO,IAAIL,OAAO,CAACF,OAAR,CAAgBS,UAAhB,CAA2BD,QAA3B,EAAqC,GAArC,CAAJ,EAA+C;AACpD,WAAQ,IAAGD,IAAK,IAAGC,QAAQ,CAACE,KAAT,CAAe,CAAf,CAAkB,EAArC;AACD,GAFM,MAEA;AACL,WAAQ,GAAEH,IAAK,IAAGC,QAAS,EAA3B;AACD;AACF","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = prefixNegativeModifiers;\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction prefixNegativeModifiers(base, modifier) {\n  if (modifier === '-') {\n    return `-${base}`;\n  } else if (_lodash.default.startsWith(modifier, '-')) {\n    return `-${base}-${modifier.slice(1)}`;\n  } else {\n    return `${base}-${modifier}`;\n  }\n}"]},"metadata":{},"sourceType":"script"}